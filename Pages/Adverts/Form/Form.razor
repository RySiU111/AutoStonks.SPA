@page "/advert/form"
@page "/advert/form/{id:int}"
@using AutoStonks.SPA.Models

<div class="row justify-content-center">
    <div class="col-12 pb-4">
        <EditForm class="row justify-content-center" Model="_advert" OnValidSubmit="ProceedToPayment">
            <DataAnnotationsValidator />
            <div class="col-6">
            <Field>
                <FieldLabel>Nazwa ogłoszenia</FieldLabel>
                <TextEdit Placeholder="Nazwa ogłoszenia" 
                    @bind-Text="_advert.Title"/>
                <ValidationMessage For="@(() => _advert.Title)" />
            </Field>
            <Field>
                <FieldLabel>VIN</FieldLabel>
                <TextEdit Placeholder="VIN" 
                    @bind-Text="_advert.VIN"/>
                <ValidationMessage For="@(() => _advert.VIN)" />
            </Field>
            <Field>
                <FieldLabel>Data Pierwszej rejestracji samochodu</FieldLabel>
                <DateEdit Placeholder="Data Pierwszej rejestracji samochodu" 
                    TValue="DateTime"
                    @bind-Date="_advert.FirstRegistrationDate"/>
            </Field>
            <Field>
                <FieldLabel>Data Produkcji</FieldLabel>
                <DateEdit Placeholder="Data Produkcji" 
                    TValue="DateTime"
                    @bind-Date="_advert.CarProductionDate"/>
            </Field>
            <Field>
                <FieldLabel>Numer rejestracyjny</FieldLabel>
                <TextEdit Placeholder="Numer rejestracyjny" 
                    @bind-Text="_advert.PlateNumber"/>
                <ValidationMessage For="@(() => _advert.PlateNumber)" />
            </Field>
            <Field>
                <FieldLabel>Cena</FieldLabel>
                <NumericEdit Placeholder="Cena" 
                    TValue="double"
                    @bind-Value="_advert.Price"
                    Min="0"/>
                <ValidationMessage For="@(() => _advert.Price)" />
            </Field>
            <Field>
                <FieldLabel>Moc [KM]</FieldLabel>
                <NumericEdit Placeholder="Moc [KM]" 
                    TValue="int"
                    @bind-Value="_advert.Horsepower"
                    Min="0"/>
                <ValidationMessage For="@(() => _advert.Horsepower)" />
            </Field>
            <Field>
                <FieldLabel>Pojemność skokowa</FieldLabel>
                <NumericEdit Placeholder="Pojemność skokowa" 
                    TValue="int "
                    @bind-Value="_advert.Displacement"
                    Min="0"/>
                <ValidationMessage For="@(() => _advert.Displacement)" />
            </Field>
            <Field>
                <FieldLabel>Lokacja oferty</FieldLabel>
                <TextEdit Placeholder="Lokalizacja oferty" 
                    @bind-Text="_advert.Location"/>
                <ValidationMessage For="@(() => _advert.Location)" />
            </Field>
            <Field>
                <Check
                    TValue="bool" 
                    @bind-Value="_advert.HasBeenCrashed">
                    Bezwypadkowy</Check>
                <ValidationMessage For="@(() => _advert.HasBeenCrashed)" />
            </Field>
            <Field>
                <FieldLabel>Przebieg [km]</FieldLabel>
                <NumericEdit Placeholder="Przebieg [km]" 
                    TValue="int"
                    @bind-Value="_advert.Mileage"
                    Min="0"/>
                <ValidationMessage For="@(() => _advert.Mileage)" />
            </Field>
            </div>
            <div class="col-6">
            <Field>
                <FieldLabel>Numer telefonu</FieldLabel>
                <TextEdit Placeholder="Numer telefonu" 
                    @bind-Text="_advert.PhoneNumber"/>
                <ValidationMessage For="@(() => _advert.PhoneNumber)" />
            </Field>
            <Field>
                <FieldLabel>Rodzaj paliwa</FieldLabel>
                <Select TValue="FuelType" @bind-SelectedValue="_advert.Fuel">
                    <SelectItem Value="@FuelType.Diesel">Diesel</SelectItem>
                    <SelectItem  Value="@FuelType.Petrol">Benzyna</SelectItem>
                    <SelectItem Value="@FuelType.Electric">Elektryczny</SelectItem>
                    <SelectItem Value="@FuelType.LPG">LPG</SelectItem>
                </Select>
            </Field>
            <Field>
                <FieldLabel>Kondycja</FieldLabel>
                <Select TValue="ConditionState" @bind-SelectedValue="_advert.Condition">
                    <SelectItem Value="@ConditionState.Undamaged">Nieuszkodzony</SelectItem>
                    <SelectItem Value="@ConditionState.Damaged">Uszkodzony</SelectItem>
                </Select>
            </Field>
            <Field>
                <FieldLabel>Napęd</FieldLabel>
                <Select TValue="DriveTypes" @bind-SelectedValue="_advert.DriveType">
                    <SelectItem Value="@DriveTypes.FWD">FWD</SelectItem>
                    <SelectItem Value="@DriveTypes.RWD">RWD</SelectItem>
                    <SelectItem Value="@DriveTypes.AWD">AWD</SelectItem>
                </Select>
            </Field>
            <Field>
                <FieldLabel>Skrzynia biegów</FieldLabel>
                <Select TValue="TransmissionTypes" @bind-SelectedValue="_advert.TransmissionType">
                    <SelectItem Value="@TransmissionTypes.Manual">Manualna</SelectItem>
                    <SelectItem Value="@TransmissionTypes.Automatic">Automatyczna</SelectItem>
                    <SelectItem Value="@TransmissionTypes.Sequence">Sekwencyjna</SelectItem>
                </Select>
            </Field>
            <Field>
                <FieldLabel>Opis</FieldLabel>
                <MemoEdit Rows="7"  Placeholder="Opis"
                    @bind-Text="_advert.Description"/>
                <ValidationMessage For="@(() => _advert.Description)" />
            </Field>

            <!--Brand Model Generation-->
            <Fields>
                <Field class="mb-0" ColumnSize="ColumnSize.Is4.OnDesktop">
                    <FieldLabel>Marka</FieldLabel>
                    <Select TValue="int" @bind-SelectedValue="SelectedBrandId">
                        <SelectItem Value="0"></SelectItem>
                        @foreach(var brand in _brands)
                        {
                            <SelectItem Value="@brand.Id">@brand.Name</SelectItem>
                        } 
                    </Select>
                </Field>
                <Field class="mb-0" ColumnSize="ColumnSize.Is4.OnDesktop">
                    <FieldLabel>Model</FieldLabel>
                    <Select TValue="int" @bind-SelectedValue="SelectedModelId" >
                        @if(_selectedBrandId > 0)
                        {
                            <SelectItem Value="0"></SelectItem>
                            @foreach(var model in _brands.FirstOrDefault(b => b.Id == _selectedBrandId).Models)
                            {
                                <SelectItem Value="@model.Id">@model.Name</SelectItem>
                            } 
                        }
                    </Select>
                </Field>
                <Field class="mb-0" ColumnSize="ColumnSize.Is4.OnDesktop">
                    <FieldLabel>Generacja</FieldLabel>
                    <Select TValue="int" @bind-SelectedValue="_advert.GenerationId">
                        @if(_selectedModelId > 0)
                        {
                            <SelectItem Value="0"></SelectItem>
                            @foreach(var gen in _brands
                                .FirstOrDefault(b => b.Id == _selectedBrandId)
                                .Models
                                .FirstOrDefault(m => m.Id == _selectedModelId)
                                .Generations)
                            {
                                <SelectItem Value="@gen.Id">@gen.Name</SelectItem>
                            } 
                        }
                    </Select>
                </Field>
            </Fields>
            <ValidationMessage For="@(() => _advert.GenerationId)" />

            <Field class="my-2">
                <FieldLabel>Zdjęcia</FieldLabel>
                <FileEdit Filter="image/*" Multiple="true" Changed="OnFileChanged" Progressed="OnProgressed"/>
            </Field>

            @if(_progressBarValue != null)
            {
                <Blazorise.ProgressBar Animated="true" Striped="true"  Min="0" Max="100" Value="_progressBarValue" />
            }

            <Button class="col-12 my-3" 
                Color="Color.Primary" 
                Clicked="@ShowEquipmentModal">
                Zarządzaj Wyposażeniem
            </Button>
  
            </div>
            <Button Type="ButtonType.Submit" Color="Color.Success" Disabled="@(_progressBarValue != null)">Zapisz</Button>
        </EditForm>
    </div>
</div>

<Modal @ref="_equipmentModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true" Size="ModalSize.ExtraLarge">
        <ModalHeader>
            <ModalTitle>Wyposażenie</ModalTitle>
            @* <CloseButton Clicked="@HideModal" /> *@
        </ModalHeader>
        <ModalBody>
            <Fields class="row justify-content-center">
            @foreach(var eq in _equipment)
            {
                <Field class="col-6">
                    <Check TValue="bool"
                        @bind-Checked="eq.Active">
                        @eq.Equipment.Name</Check>
                </Field>
            }
            </Fields>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" Clicked="@HideEquipmentModal">Zapisz</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="_paymentModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true" Size="ModalSize.ExtraLarge">
        <ModalHeader>
            <ModalTitle>Opłata</ModalTitle>
            @* <CloseButton Clicked="@HidePaymentModal" /> *@
        </ModalHeader>
        @if(!_paymentConfirm)
        {
            <EditForm Model="_payment" OnValidSubmit="HandleValidSubmit">
                <ModalBody class="row justify-content-center">
                    <DataAnnotationsValidator />
                    <Field class="col-12">
                        <FieldLabel>Okres wystawienia oferty</FieldLabel>
                        <Select TValue="int" @bind-SelectedValue="_payment.DurationInDays">
                                <SelectItem Value="10">10 dni</SelectItem>
                                <SelectItem Value="20">20 dni</SelectItem>
                                <SelectItem Value="30">30 dni</SelectItem>
                        </Select>
                    </Field>
                    <Field class="col-auto">
                        <Check
                            TValue="bool" 
                            @bind-Checked="_advert.IsPromoted">
                            Promowana</Check>
                        <ValidationMessage For="@(() => _advert.IsPromoted)" />
                    </Field>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Primary" Type="ButtonType.Submit">Wyślij</Button>
                </ModalFooter>
            </EditForm>
        }
        else
        {
            <ModalBody class="row justify-content-center mx-4">
                <Field class="col-auto">
                    <FieldLabel>Cena za wystawienie ogłoszenia</FieldLabel>
                    <Addons class="my-1">
                        <Addon AddonType="AddonType.Start">
                            <AddonLabel class="detailed-addon-start">Cena</AddonLabel>
                        </Addon>
                        <Addon AddonType="AddonType.Body">
                            <TextEdit Placeholder="Cena za wystawienie ogłoszenie" 
                                Disabled="true"
                                TValue="float"
                                Text="@_payment.Price.ToString("N2")"/>
                        </Addon>
                        <Addon AddonType="AddonType.End">
                            <AddonLabel>zł</AddonLabel>
                        </Addon>
                    </Addons>
                </Field>
                <Button class="col-12" Color="Color.Success" @onclick="ConfirmPayment">Zapłać</Button>
            </ModalBody>
        }
    </ModalContent>
</Modal>

<!--Error snackbar-->
<Snackbar @ref="_snackbar" Interval="15000" Color="SnackbarColor.Danger">
  <SnackbarBody>
      @_errorMessage
  </SnackbarBody>
</Snackbar>