@page "/advert/form"
@page "/advert/form/{id:int}"
@using AutoStonks.SPA.Models

<div class="row justify-content-center">
    <div class="col-12 pb-4">
        <EditForm class="row justify-content-center" Model="_advert" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <div class="col-6">
            <Field>
                <FieldLabel>Tytuł</FieldLabel>
                <TextEdit Placeholder="Tytuł" 
                    @bind-Text="_advert.Title"/>
                <ValidationMessage For="@(() => _advert.Title)" />
            </Field>
            <Field>
                <FieldLabel>VIN</FieldLabel>
                <TextEdit Placeholder="VIN" 
                    @bind-Text="_advert.VIN"/>
                <ValidationMessage For="@(() => _advert.VIN)" />
            </Field>
            <Field>
                <FieldLabel>Data Pierwszej rejestracji samochodu</FieldLabel>
                <DateEdit Placeholder="FirstRegistrationDate" 
                    TValue="DateTime"
                    @bind-Text="_advert.FirstRegistrationDate"/>
            </Field>
            <Field>
                <FieldLabel>Data Produkcji</FieldLabel>
                <DateEdit Placeholder="Data Produkcji" 
                    TValue="DateTime"
                    @bind-Text="_advert.CarProductionDate"/>
            </Field>
            <Field>
                <FieldLabel>Numer rejestracyjny</FieldLabel>
                <TextEdit Placeholder="PlateNumber" 
                    @bind-Text="_advert.PlateNumber"/>
                <ValidationMessage For="@(() => _advert.PlateNumber)" />
            </Field>
            <Field>
                <FieldLabel>Cena</FieldLabel>
                <NumericEdit Placeholder="Price" 
                    TValue="double"
                    @bind-Value="_advert.Price"
                    Min="0"/>
                <ValidationMessage For="@(() => _advert.Price)" />
            </Field>
            <Field>
                <FieldLabel>Moc</FieldLabel>
                <NumericEdit Placeholder="HorsePower" 
                    TValue="int"
                    @bind-Value="_advert.Horsepower"
                    Min="0"/>
                <ValidationMessage For="@(() => _advert.Horsepower)" />
            </Field>
            <Field>
                <FieldLabel>Pojemność skokowa</FieldLabel>
                <NumericEdit Placeholder="Displacement" 
                    TValue="int "
                    @bind-Value="_advert.Displacement"
                    Min="0"/>
                <ValidationMessage For="@(() => _advert.Displacement)" />
            </Field>
            <Field>
                <FieldLabel>Lokacja oferty</FieldLabel>
                <TextEdit Placeholder="Location" 
                    @bind-Text="_advert.Location"/>
                <ValidationMessage For="@(() => _advert.Location)" />
            </Field>
            <Field>
                <Check
                    TValue="bool" 
                    @bind-Value="_advert.HasBeenCrashed">
                    Bezwypadkowy</Check>
                <ValidationMessage For="@(() => _advert.HasBeenCrashed)" />
            </Field>
            </div>
            <div class="col-6">
            <Field>
                <FieldLabel>Rodzaj paliwa</FieldLabel>
                <Select TValue="FuelType" @bind-SelectedValue="_advert.Fuel">
                    @foreach(var fuel in Enum.GetValues(typeof(FuelType)).Cast<FuelType>())
                    {
                        <SelectItem Value="@fuel">@fuel</SelectItem>
                    } 
                </Select>
            </Field>
            <Field>
                <FieldLabel>Kondycja</FieldLabel>
                <Select TValue="ConditionState" @bind-SelectedValue="_advert.Condition">
                    @foreach(var condition in Enum.GetValues(typeof(ConditionState)).Cast<ConditionState>())
                    {
                        <SelectItem Value="@condition">@condition</SelectItem>
                    } 
                </Select>
            </Field>
            <Field>
                <FieldLabel>Napęd</FieldLabel>
                <Select TValue="DriveTypes" @bind-SelectedValue="_advert.DriveType">
                    @foreach(var driveType in Enum.GetValues(typeof(DriveTypes)).Cast<DriveTypes>())
                    {
                        <SelectItem Value="@driveType">@driveType</SelectItem>
                    } 
                </Select>
            </Field>
            <Field>
                <FieldLabel>Skrzynia biegów</FieldLabel>
                <Select TValue="TransmissionTypes" @bind-SelectedValue="_advert.TransmissionType">
                    @foreach(var transmissionType in Enum.GetValues(typeof(TransmissionTypes)).Cast<TransmissionTypes>())
                    {
                        <SelectItem Value="@transmissionType">@transmissionType</SelectItem>
                    } 
                </Select>
            </Field>
            <Field>
                <FieldLabel>Opis</FieldLabel>
                <MemoEdit Rows="5"  Placeholder="Description"
                    @bind-Text="_advert.Description"/>
                <ValidationMessage For="@(() => _advert.Description)" />
            </Field>

            <!--Brand Model Generation-->
            <Fields>
                <Field ColumnSize="ColumnSize.Is4.OnDesktop">
                    <FieldLabel>Marka</FieldLabel>
                    <Select TValue="int" @bind-SelectedValue="SelectedBrandId">
                        <SelectItem Value="0"></SelectItem>
                        @foreach(var brand in _brands)
                        {
                            <SelectItem Value="@brand.Id">@brand.Name</SelectItem>
                        } 
                    </Select>
                </Field>
                <Field ColumnSize="ColumnSize.Is4.OnDesktop">
                    <FieldLabel>Model</FieldLabel>
                    <Select TValue="int" @bind-SelectedValue="SelectedModelId" >
                        @if(_selectedBrandId > 0)
                        {
                            <SelectItem Value="0"></SelectItem>
                            @foreach(var model in _brands.FirstOrDefault(b => b.Id == _selectedBrandId).Models)
                            {
                                <SelectItem Value="@model.Id">@model.Name</SelectItem>
                            } 
                        }
                    </Select>
                </Field>
                <Field ColumnSize="ColumnSize.Is4.OnDesktop">
                    <FieldLabel>Generacja</FieldLabel>
                    <Select TValue="int" @bind-SelectedValue="_advert.GenerationId">
                        @if(_selectedModelId > 0)
                        {
                            <SelectItem Value="0"></SelectItem>
                            @foreach(var gen in _brands
                                .FirstOrDefault(b => b.Id == _selectedBrandId)
                                .Models
                                .FirstOrDefault(m => m.Id == _selectedModelId)
                                .Generations)
                            {
                                <SelectItem Value="@gen.Id">@gen.Name</SelectItem>
                            } 
                        }
                    </Select>
                </Field>
            </Fields>
            </div>
            <Button Type="ButtonType.Submit">Zapisz</Button>
        </EditForm>
    </div>
</div>

<Snackbar @ref="_snackbar" Color="SnackbarColor.Danger">
  <SnackbarBody>
      @_errorMessage
  </SnackbarBody>
</Snackbar>